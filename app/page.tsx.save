'use client';

import { useState } from 'react';
import Papa from 'papaparse';
import { Parser } from 'json2csv';

export default function Home() {
  const [fileName, setFileName] = useState('');
  const [csvData, setCsvData] = useState<any[]>([]);
  const [intros, setIntros] = useState<any[]>([]);
  const [loading, setLoading] = useState(false);

  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (!file) return;

    setFileName(file.name);

    Papa.parse(file, {
      header: true,
      skipEmptyLines: true,
      complete: (result) => {
        setCsvData(result.data);
        console.log('CSV –ø—Ä–æ—á–∏—Ç–∞–Ω:', result.data);
      },
    });
  };

  const handleGenerate = async () => {
    if (csvData.length === 0) return;
    setLoading(true);
    try {
      const response = await fetch('/api/generate', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(csvData),
      });
      const data = await response.json();
      setIntros(data);
    } catch (error) {
       console.error('–û—à–∏–±–∫–∞:', error);
    } finally {      setLoading(false);
    }
  };

  const handleDownload = () => {
    if (intros.length === 0) return;

    const parser = new Parser();
    const csv = parser.parse(intros);

    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
    const url = URL.createObjectURL(blob);

    const link = document.createElement('a');
    link.setAttribute('href', url);
    link.setAttribute('download', 'generated_intros.csv');
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  return (
    <main style={{ padding: '2rem', fontFamily: 'sans-serif' }}>
      <h1>üî• Ntage App –∑–∞–ø—É—â–µ–Ω–æ!</h1>
      <p>–ó–∞–≥—Ä—É–∑–∏ CSV –∏ –º—ã –≤—Å—ë —Å–¥–µ–ª–∞–µ–º üíº</p>

      <input
        type="file"
        accept=".csv"
        onChange={handleFileChange}
        style={{ marginTop: '1rem' }}
      />

      {fileName && <p style={{ marginTop: '1rem' }}>‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω: {fileName}</p>}

      {csvData.length > 0 && (
        <div style={{ marginTop: '2rem' }}>
          <h2>üìÑ –ü—Ä–µ–≤—å—é CSV:</h2>
          <pre style={{ background: '#f0f0f0', padding: '1rem', overflowX: 'auto' }}>
            {JSON.stringify(csvData.slice(0, 3), null, 2)}
          </pre>
        </div>
      )}

      {csvData.length > 0 && (
        <button
          onClick={handleGenerate}
          style={{
            marginTop: '1rem',
            padding: '0.5rem 1rem',
            background: '#0070f3',
            color: '#fff',
            borderRadius: '4px',
            border: 'none',
            cursor: 'pointer'
          }}
        >
          {loading ? '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º...' : 'üöÄ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç—Ä–æ'}
        </button>
      )}

      {intros.length > 0 && (
        <>
          <button
            onClick={handleDownload}
            style={{
              marginTop: '1rem',
              padding: '0.5rem 1rem',
              background: '#28a745',
              color: '#fff',
              borderRadius: '4px',
              border: 'none',
              cursor: 'pointer'
            }}
          >
            üíæ –°–∫–∞—á–∞—Ç—å CSV
          </button
